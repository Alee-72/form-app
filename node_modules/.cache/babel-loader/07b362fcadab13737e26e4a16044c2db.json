{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ali/React/my-app/src/FormDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardContent, TextField } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport React, { useState } from \"react\";\n\nconst sleep = time => new Promise(acc => (acc, time));\n\nexport const FormDisplay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(FormikStepper, {\n          initialValues: {\n            firstname: \"\",\n            lastname: \"\",\n            age: \"\",\n            email: \"\",\n            password: \"\",\n            male: false,\n            female: false,\n            contact: \"\",\n            description: \"\"\n          },\n          onSubmit: async values => {\n            console.log(\"values\", values);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormikStep, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"First Name\",\n                name: \"firstname\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"   \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Last Name\",\n                name: \"lastname\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"   \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                label: \"Age\",\n                name: \"age\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikStep, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\"   \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Email\",\n                name: \"email\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"    \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Password\",\n                name: \"password\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikStep, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\"    \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"checkbox\",\n                Label: {\n                  label: \"Female\"\n                },\n                name: \" female\",\n                component: CheckboxWithLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              Label: {\n                label: \"Male\"\n              },\n              name: \"male\",\n              component: CheckboxWithLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"   \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                label: \"Contact\",\n                name: \"contact\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"     \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Description\",\n                name: \"description\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = FormDisplay;\nexport const FormikStepper = ({\n  children,\n  ...props\n}) => {\n  _s();\n\n  const ChildrenArray = React.Children.toArray(children);\n  const [step, setstep] = useState(0);\n  const currentchildren = ChildrenArray[step];\n  return /*#__PURE__*/_jsxDEV(Formik, { ...props,\n    onSubmit: async (values, action) => {\n      if (step == ChildrenArray.length - 1) {\n        return props.onSubmit(values, action);\n      } else {\n        setstep(s => s + 1);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [currentchildren, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setstep(s => s - 1),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: [\" \", step == ChildrenArray.length - 1 ? \"Submit\" : \"Next\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormikStepper, \"GnRRDLy78TCsp4JROtVwfPInytE=\");\n\n_c2 = FormikStepper;\nexport const FormikStep = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c3 = FormikStep;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormDisplay\");\n$RefreshReg$(_c2, \"FormikStepper\");\n$RefreshReg$(_c3, \"FormikStep\");","map":{"version":3,"sources":["/home/ali/React/my-app/src/FormDisplay.tsx"],"names":["Box","Button","Card","CardContent","TextField","Field","Form","Formik","CheckboxWithLabel","React","useState","sleep","time","Promise","acc","FormDisplay","firstname","lastname","age","email","password","male","female","contact","description","values","console","log","label","FormikStepper","children","props","ChildrenArray","Children","toArray","step","setstep","currentchildren","action","length","onSubmit","s","FormikStep"],"mappings":"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","sourcesContent":["import { Box, Button, Card, CardContent, TextField } from \"@material-ui/core\";\nimport { time } from \"console\";\nimport { Field, Form, Formik, FormikConfig, FormikValues } from \"formik\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport React, { Children, useState } from \"react\";\n\n\nconst sleep = (time:any)=> new Promise((acc)=> (acc,time));  \n\nexport const FormDisplay = () => {\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <FormikStepper\n            initialValues={{\n              firstname: \"\",\n              lastname: \"\",\n              age: \"\",\n              email: \"\",\n              password: \"\",\n              male: false,\n              female: false,\n              contact: \"\",\n              description: \"\",\n            }}\n            onSubmit={async (values) => {\n              console.log(\"values\", values);\n            }}\n          >\n            <FormikStep>\n                \n          <Box> <Field\n                type=\"text\"\n                label=\"First Name\"\n                name=\"firstname\"\n                component={TextField}\n              /> </Box>\n            <Box>   <Field\n                type=\"text\"\n                label=\"Last Name\"\n                name=\"lastname\"\n                component={TextField}\n              /> </Box>\n           <Box>   <Field\n                type=\"number\"\n                label=\"Age\"\n                name=\"age\"\n                component={TextField}\n              /></Box>\n            </FormikStep>\n            <FormikStep>\n            <Box>   <Field\n                type=\"text\"\n                label=\"Email\"\n                name=\"email\"\n                component={TextField}\n              /></Box>\n          <Box>    <Field\n                type=\"text\"\n                label=\"Password\"\n                name=\"password\"\n                component={TextField}\n              /></Box>\n            </FormikStep>\n            <FormikStep>\n            <Box>    <Field\n                type=\"checkbox\"\n                Label={{ label: \"Female\" }}\n                name=\" female\"\n                component={CheckboxWithLabel}\n              /></Box>\n             <Field\n                type=\"checkbox\"\n                Label={{ label: \"Male\" }}\n                name=\"male\"\n                component={CheckboxWithLabel}\n              />\n           <Box>   <Field\n                type=\"number\"\n                label=\"Contact\"\n                name=\"contact\"\n                component={TextField}\n              /></Box>\n         <Box>     <Field\n                type=\"text\"\n                label=\"Description\"\n                name=\"description\"\n                component={TextField}\n              /></Box>\n            </FormikStep>\n          </FormikStepper>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport const FormikStepper = ({\n  children,\n  ...props\n}: FormikConfig<FormikValues>) => {\n  const ChildrenArray = React.Children.toArray(children);\n\n  const [step, setstep] = useState(0);\n\n  const currentchildren = ChildrenArray[step];\n\n  return (\n    <Formik\n      {...props}\n      onSubmit={async (values, action) => {\n        if (step == ChildrenArray.length - 1) {\n          return props.onSubmit(values, action);\n        } else {\n          setstep((s) => s + 1);\n        }\n      }}     >\n      <Form>{currentchildren}\n      \n      <Button onClick = {()=> setstep(s=> s-1)}>back</Button>\n      <Button type= 'submit'> {step == ChildrenArray.length - 1 ? \"Submit\" : \"Next\"}</Button>\n      </Form>\n    </Formik>\n  );\n};\nexport interface Proptypestep\n  extends Pick<FormikConfig<FormikValues>, \"children\" | \"validationSchema\"> {}\n\nexport const FormikStep = ({ children }: Proptypestep) => {\n  return <>{children}</>;\n};\n"]},"metadata":{},"sourceType":"module"}