{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ali/React/my-app/src/FormDisplay.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardContent, CircularProgress, Step, StepConnector, StepLabel, Stepper, TextField, withStyles } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport React, { useState } from \"react\";\n\nconst sleep = time => new Promise(acc => setTimeout(acc, time));\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nexport const FormDisplay = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(FormikStepper, {\n          initialValues: {\n            firstname: \"\",\n            lastname: \"\",\n            age: \"\",\n            email: \"\",\n            password: \"\",\n            male: false,\n            female: false,\n            contact: \"\",\n            description: \"\"\n          },\n          onSubmit: async values => {\n            await sleep(3000);\n            console.log(\"values\", values);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormikStep, {\n            label: \"Personal\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"First Name\",\n                name: \"firstname\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Last Name\",\n                name: \"lastname\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                label: \"Age\",\n                name: \"age\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikStep, {\n            label: \"Account\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Email\",\n                name: \"email\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Password\",\n                name: \"password\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikStep, {\n            label: \"Description\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"checkbox\",\n                Label: {\n                  label: \"Female\"\n                },\n                name: \" female\",\n                component: CheckboxWithLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"checkbox\",\n              Label: {\n                label: \"Male\"\n              },\n              name: \"male\",\n              component: CheckboxWithLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"number\",\n                label: \"Contact\",\n                name: \"contact\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                label: \"Description\",\n                name: \"description\",\n                component: TextField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = FormDisplay;\nexport const FormikStep = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c2 = FormikStep;\nexport const FormikStepper = ({\n  children,\n  ...props\n}) => {\n  _s();\n\n  const childrenArray = React.Children.toArray(children);\n  const [step, setstep] = useState(0);\n  const currentchildren = childrenArray[step];\n  console.log(childrenArray.length - 1);\n  return /*#__PURE__*/_jsxDEV(Formik, { ...props,\n    onSubmit: async (values, action) => {\n      if (step == childrenArray.length - 1) {\n        return props.onSubmit(values, action);\n      } else {\n        setstep(s => s + 1);\n      }\n    },\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: step,\n        alternativeLabel: true,\n        children: childrenArray.map(child => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: child.props.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, child.props.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        alternativeLabel: true,\n        activeStep: step,\n        connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 62\n        }, this),\n        children: childrenArray.map(child => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: child.props.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, child.props.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), currentchildren, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), step > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isSubmitting,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setstep(s => s - 1),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this) : null, \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isSubmitting,\n        startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: \"1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 39\n        }, this) : null,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        children: step == childrenArray.length - 1 ? \"Submit\" : \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormikStepper, \"GnRRDLy78TCsp4JROtVwfPInytE=\");\n\n_c3 = FormikStepper;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormDisplay\");\n$RefreshReg$(_c2, \"FormikStep\");\n$RefreshReg$(_c3, \"FormikStepper\");","map":{"version":3,"sources":["/home/ali/React/my-app/src/FormDisplay.tsx"],"names":["Box","Button","Card","CardContent","CircularProgress","Step","StepConnector","StepLabel","Stepper","TextField","withStyles","Field","Form","Formik","CheckboxWithLabel","React","useState","sleep","time","Promise","acc","setTimeout","ColorlibConnector","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","FormDisplay","firstname","lastname","age","email","password","male","female","contact","description","values","console","log","label","FormikStep","children","FormikStepper","props","childrenArray","Children","toArray","step","setstep","currentchildren","length","action","onSubmit","s","isSubmitting","map","child"],"mappings":"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","sourcesContent":["import { Box, Button, Card, CardContent, CircularProgress, Step, StepConnector, StepIconProps, StepLabel, Stepper, TextField, withStyles } from \"@material-ui/core\";\n\nimport { Field, Form, Formik, FormikConfig, FormikValues } from \"formik\";\nimport { CheckboxWithLabel } from \"formik-material-ui\";\nimport React, { Children, useState } from \"react\";\n\nconst sleep = (time: any) => new Promise((acc) => setTimeout(acc, time));\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\n\n\n\n\n\nexport const FormDisplay = () => {\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <FormikStepper\n            initialValues={{\n              firstname: \"\",\n              lastname: \"\",\n              age: \"\",\n              email: \"\",\n              password: \"\",\n              male: false,\n              female: false,\n              contact: \"\",\n              description: \"\",\n            }}\n            onSubmit={async (values) => {\n              await sleep(3000);\n              console.log(\"values\", values);\n            }}\n          >\n            <FormikStep label='Personal'>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"text\"\n                  label=\"First Name\"\n                  name=\"firstname\"\n                  component={TextField}\n                />{\" \"}\n              </Box>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"text\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  component={TextField}\n                />{\" \"}\n              </Box>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"number\"\n                  label=\"Age\"\n                  name=\"age\"\n                  component={TextField}\n                />\n              </Box>\n            </FormikStep>\n            <FormikStep label='Account'>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"text\"\n                  label=\"Email\"\n                  name=\"email\"\n                  component={TextField}\n                />\n              </Box>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"text\"\n                  label=\"Password\"\n                  name=\"password\"\n                  component={TextField}\n                />\n              </Box>\n            </FormikStep>\n            <FormikStep label='Description'>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"checkbox\"\n                  Label={{ label: \"Female\" }}\n                  name=\" female\"\n                  component={CheckboxWithLabel}\n                />\n              </Box>\n              <Field\n                type=\"checkbox\"\n                Label={{ label: \"Male\" }}\n                name=\"male\"\n                component={CheckboxWithLabel}\n              />\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"number\"\n                  label=\"Contact\"\n                  name=\"contact\"\n                  component={TextField}\n                />\n              </Box>\n              <Box>\n                {\" \"}\n                <Field\n                  type=\"text\"\n                  label=\"Description\"\n                  name=\"description\"\n                  component={TextField}\n                />\n              </Box>\n            </FormikStep>\n          </FormikStepper>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\n\nexport interface Proptypestep\n  extends Pick<FormikConfig<FormikValues>, \"children\" | \"validationSchema\"> {\n          label: string\n  }\n\n \nexport const FormikStep = ({ children }: Proptypestep) => {\n  return <>{children}</>;\n};\n\n\nexport const FormikStepper = ({\n  children,\n  ...props\n}: FormikConfig<FormikValues>) => {\n  const childrenArray = React.Children.toArray(children)  as React.ReactElement<Proptypestep>[];\n  const [step, setstep] = useState(0);\n  const currentchildren = childrenArray[step];\n  console.log(childrenArray.length - 1);\n  return (\n    <Formik\n      {...props}\n      onSubmit={async (values, action) => {\n        if (step == childrenArray.length - 1) {\n          return props.onSubmit(values, action);\n        } else {\n          setstep((s) => s + 1);\n        }\n      }}\n    >\n      \n      {({ isSubmitting }) => (\n        <Form>\n          \n          <Stepper activeStep={step} alternativeLabel>\n        {childrenArray.map((child) => (\n          <Step key={child.props.label}>\n            <StepLabel>{child.props.label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Stepper alternativeLabel activeStep={step} connector={<ColorlibConnector />}>\n        {childrenArray.map((child) => (\n          <Step key={child.props.label}>\n            <StepLabel >{child.props.label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n          {currentchildren}\n          <br />\n          <br />\n          {step > 0 ? (\n            <Button\n              disabled={isSubmitting}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => setstep((s) => s - 1)}\n            >\n              Back\n            </Button>\n          ) : null}\n          &nbsp; &nbsp;\n          <Button\n            disabled={isSubmitting}\n            startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            {step == childrenArray.length - 1 ? \"Submit\" : \"Next\"}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};"]},"metadata":{},"sourceType":"module"}